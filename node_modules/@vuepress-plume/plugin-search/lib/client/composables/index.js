// src/client/composables/searchIndex.ts
import { searchIndex } from "@internal/minisearchIndex";
import { shallowRef } from "vue";
var searchIndexData = shallowRef(searchIndex);
function useSearchIndex() {
  return searchIndexData;
}
if (__VUEPRESS_DEV__ && (import.meta.webpackHot || import.meta.hot)) {
  __VUE_HMR_RUNTIME__.updateSearchIndex = (data) => {
    searchIndexData.value = data;
  };
  __VUE_HMR_RUNTIME__.updateSearchIndex = (data) => {
    searchIndexData.value = data;
  };
}

// src/client/composables/locale.ts
import { useRouteLocale } from "vuepress/client";
import { computed, toRef } from "vue";
var defaultLocales = {
  "/": {
    placeholder: "Search",
    resetButtonTitle: "Reset search",
    backButtonTitle: "Close search",
    noResultsText: "No results for",
    footer: {
      selectText: "to select",
      selectKeyAriaLabel: "enter",
      navigateText: "to navigate",
      navigateUpKeyAriaLabel: "up arrow",
      navigateDownKeyAriaLabel: "down arrow",
      closeText: "to close",
      closeKeyAriaLabel: "escape"
    }
  }
};
function useLocale(locales) {
  const localesRef = toRef(locales);
  const routeLocale = useRouteLocale();
  const locale = computed(() => localesRef.value[routeLocale.value] ?? defaultLocales[routeLocale.value] ?? defaultLocales["/"]);
  return locale;
}
export {
  useLocale,
  useSearchIndex
};
