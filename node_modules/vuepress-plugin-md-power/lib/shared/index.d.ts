import { BuiltinTheme, ThemeRegistration } from 'shiki';

type CanIUseMode = 'embed' | 'image';
interface CanIUseTokenMeta {
    feature: string;
    mode: CanIUseMode;
    versions: string;
}
interface CanIUseOptions {
    /**
     * 嵌入模式
     *
     * embed 通过iframe嵌入，提供可交互视图
     *
     * image 通过图片嵌入，静态
     *
     * @default 'embed'
     */
    mode?: CanIUseMode;
}

interface SizeOptions {
    width?: string;
    height?: string;
    ratio?: number | string;
}

type PDFEmbedType = 'iframe' | 'embed' | 'pdfjs';
interface PDFTokenMeta extends SizeOptions {
    page?: number;
    noToolbar?: boolean;
    zoom?: number;
    src?: string;
    title?: string;
}
interface PDFOptions {
    /**
     * pdfjs url
     */
    pdfjsUrl?: string;
}

interface IconsOptions {
    /**
     * The prefix of the icon className
     * @default 'vp-mdi'
     */
    prefix?: string;
    /**
     * The size of the icon
     * @default '1em'
     */
    size?: string | number;
    /**
     * The color of the icon
     * @default 'currentColor'
     */
    color?: string;
}

interface VideoOptions {
    bilibili?: boolean;
    youtube?: boolean;
}
interface BilibiliTokenMeta extends SizeOptions {
    title?: string;
    bvid?: string;
    aid?: string;
    cid?: string;
    autoplay?: boolean;
    time?: string | number;
    page?: number;
}
interface YoutubeTokenMeta extends SizeOptions {
    title?: string;
    id: string;
    autoplay?: boolean;
    loop?: boolean;
    start?: string | number;
    end?: string | number;
}

interface CodepenTokenMeta extends SizeOptions {
    title?: string;
    user?: string;
    slash?: string;
    tab?: string;
    theme?: string;
    preview?: boolean;
    editable?: boolean;
}

interface CodeSandboxTokenMeta extends SizeOptions {
    user?: string;
    id?: string;
    layout?: string;
    type?: 'button' | 'embed';
    title?: string;
    filepath?: string;
    navbar?: boolean;
    console?: boolean;
}

type ThemeOptions = BuiltinTheme | {
    light: BuiltinTheme;
    dark: BuiltinTheme;
};
interface ReplOptions {
    theme?: ThemeOptions;
    go?: boolean;
    kotlin?: boolean;
    rust?: boolean;
}
interface ReplEditorData {
    grammars: {
        go?: any;
        kotlin?: any;
        rust?: any;
    };
    theme: ThemeRegistration | {
        light: ThemeRegistration;
        dark: ThemeRegistration;
    };
}

interface ReplitTokenMeta extends SizeOptions {
    title?: string;
    source?: string;
    theme?: string;
}

interface JSFiddleTokenMeta extends SizeOptions {
    user?: string;
    id?: string;
    title?: string;
    theme?: string;
    tab?: string;
}

interface PlotOptions {
    /**
     * 是否启用 `=| |=`  markdown （该标记为非标准标记，脱离插件将不生效）
     * @default true
     */
    tag?: boolean;
    /**
     * 遮罩层颜色
     */
    mask?: string | {
        light: string;
        dark: string;
    };
    /**
     * 文本颜色
     */
    color?: string | {
        light: string;
        dark: string;
    };
    /**
     * 触发方式
     *
     * @default 'hover'
     */
    trigger?: 'hover' | 'click';
}

interface MarkdownPowerPluginOptions {
    pdf?: boolean | PDFOptions;
    icons?: boolean | IconsOptions;
    plot?: boolean | PlotOptions;
    bilibili?: boolean;
    youtube?: boolean;
    codepen?: boolean;
    /**
     * @deprecated
     */
    replit?: boolean;
    codeSandbox?: boolean;
    jsfiddle?: boolean;
    repl?: false | ReplOptions;
    caniuse?: boolean | CanIUseOptions;
}

export type { BilibiliTokenMeta, CanIUseMode, CanIUseOptions, CanIUseTokenMeta, CodeSandboxTokenMeta, CodepenTokenMeta, IconsOptions, JSFiddleTokenMeta, MarkdownPowerPluginOptions, PDFEmbedType, PDFOptions, PDFTokenMeta, PlotOptions, ReplEditorData, ReplOptions, ReplitTokenMeta, SizeOptions, ThemeOptions, VideoOptions, YoutubeTokenMeta };
